{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3cd816b1-2236-4e46-bc1c-bf447e8c835a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: numpy in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (1.26.4)\n",
      "Requirement already satisfied: scikit-learn in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (1.5.1)\n",
      "Requirement already satisfied: numpy>=1.19.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.26.4)\n",
      "Requirement already satisfied: scipy>=1.6.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.13.1)\n",
      "Requirement already satisfied: joblib>=1.2.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.4.2)\n",
      "Requirement already satisfied: threadpoolctl>=3.1.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (3.5.0)\n",
      "Requirement already satisfied: pandas in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (3.9.2)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (1.2.1)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (4.53.1)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (1.4.5)\n",
      "Requirement already satisfied: numpy>=1.23 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (1.26.4)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (24.1)\n",
      "Requirement already satisfied: pillow>=8 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (10.4.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (3.1.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n",
      "Requirement already satisfied: scikit-learn in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (1.5.1)\n",
      "Requirement already satisfied: gensim in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (4.3.3)\n",
      "Requirement already satisfied: transformers in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (4.44.0)\n",
      "Requirement already satisfied: sentence-transformers in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (3.0.1)\n",
      "Requirement already satisfied: numpy>=1.19.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.26.4)\n",
      "Requirement already satisfied: scipy>=1.6.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.13.1)\n",
      "Requirement already satisfied: joblib>=1.2.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.4.2)\n",
      "Requirement already satisfied: threadpoolctl>=3.1.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (3.5.0)\n",
      "Requirement already satisfied: smart-open>=1.8.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from gensim) (7.0.4)\n",
      "Requirement already satisfied: filelock in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (3.15.4)\n",
      "Requirement already satisfied: huggingface-hub<1.0,>=0.23.2 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (0.24.5)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (24.1)\n",
      "Requirement already satisfied: pyyaml>=5.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (6.0.2)\n",
      "Requirement already satisfied: regex!=2019.12.17 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (2024.7.24)\n",
      "Requirement already satisfied: requests in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (2.32.3)\n",
      "Requirement already satisfied: safetensors>=0.4.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (0.4.4)\n",
      "Requirement already satisfied: tokenizers<0.20,>=0.19 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (0.19.1)\n",
      "Requirement already satisfied: tqdm>=4.27 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from transformers) (4.66.5)\n",
      "Requirement already satisfied: torch>=1.11.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from sentence-transformers) (2.4.0)\n",
      "Requirement already satisfied: Pillow in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from sentence-transformers) (10.4.0)\n",
      "Requirement already satisfied: fsspec>=2023.5.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from huggingface-hub<1.0,>=0.23.2->transformers) (2024.6.1)\n",
      "Requirement already satisfied: typing-extensions>=3.7.4.3 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from huggingface-hub<1.0,>=0.23.2->transformers) (4.12.2)\n",
      "Requirement already satisfied: wrapt in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from smart-open>=1.8.1->gensim) (1.16.0)\n",
      "Requirement already satisfied: sympy in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from torch>=1.11.0->sentence-transformers) (1.13.2)\n",
      "Requirement already satisfied: networkx in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from torch>=1.11.0->sentence-transformers) (3.3)\n",
      "Requirement already satisfied: jinja2 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from torch>=1.11.0->sentence-transformers) (3.1.4)\n",
      "Requirement already satisfied: setuptools in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from torch>=1.11.0->sentence-transformers) (72.2.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from tqdm>=4.27->transformers) (0.4.6)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->transformers) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->transformers) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->transformers) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->transformers) (2024.7.4)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from jinja2->torch>=1.11.0->sentence-transformers) (2.1.5)\n",
      "Requirement already satisfied: mpmath<1.4,>=1.1.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from sympy->torch>=1.11.0->sentence-transformers) (1.3.0)\n",
      "Requirement already satisfied: nltk in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (3.8.1)\n",
      "Requirement already satisfied: click in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from nltk) (8.1.7)\n",
      "Requirement already satisfied: joblib in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from nltk) (1.4.2)\n",
      "Requirement already satisfied: regex>=2021.8.3 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from nltk) (2024.7.24)\n",
      "Requirement already satisfied: tqdm in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from nltk) (4.66.5)\n",
      "Requirement already satisfied: colorama in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from click->nltk) (0.4.6)\n",
      "Requirement already satisfied: gensim in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (4.3.3)\n",
      "Requirement already satisfied: numpy<2.0,>=1.18.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from gensim) (1.26.4)\n",
      "Requirement already satisfied: scipy<1.14.0,>=1.7.0 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from gensim) (1.13.1)\n",
      "Requirement already satisfied: smart-open>=1.8.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from gensim) (7.0.4)\n",
      "Requirement already satisfied: wrapt in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from smart-open>=1.8.1->gensim) (1.16.0)\n",
      "Requirement already satisfied: random-word in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (1.0.11)\n",
      "Requirement already satisfied: requests in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from random-word) (2.32.3)\n",
      "Requirement already satisfied: pytest in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from random-word) (8.3.2)\n",
      "Requirement already satisfied: pyyaml in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from random-word) (6.0.2)\n",
      "Requirement already satisfied: iniconfig in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pytest->random-word) (2.0.0)\n",
      "Requirement already satisfied: packaging in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pytest->random-word) (24.1)\n",
      "Requirement already satisfied: pluggy<2,>=1.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pytest->random-word) (1.5.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pytest->random-word) (0.4.6)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->random-word) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->random-word) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->random-word) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\idan\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->random-word) (2024.7.4)\n"
     ]
    }
   ],
   "source": [
    "!pip install numpy\n",
    "!pip install scikit-learn\n",
    "!pip install pandas\n",
    "!pip install matplotlib\n",
    "!pip install scikit-learn gensim transformers sentence-transformers\n",
    "!pip install nltk\n",
    "!pip install gensim\n",
    "!pip install random-word"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1dfea8bb-5fe0-4165-9942-54ce1d2dd3e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic 0: \"output\" \"signal\" \"wherein\" \"processor\" \"said\" \"domain\"\n",
      "Claims:\n",
      "\n",
      "\n",
      "Topic 1: \"said\" \"predefined\" \"jitter\" \"loss\" \"packet\" \"threshold\"\n",
      "Claims:\n",
      "- 1. A Method for a Media Gateway in connection to a backbone, comprising the steps of: measuring a packet loss or a jitter associated with said backbone, receiving a call when the measured packet loss exceeds a predefined packet loss threshold or when the measured jitter exceeds a predefined jitter threshold for said backbone; detecting an indication associated with the call, wherein the indication is based on a time period associated with the predefined packet loss threshold or the predefined jitter threshold, and wherein the indication indicates that the measured packet loss exceeding the predefined packet loss threshold or the measured jitter exceeding the predefined jitter threshold is acceptable for the call for said time period; based at least partially on the measured packet loss or the measured jitter and said indication associated with the call, deciding whether said call is admitted to be routed via said backbone; and adjusting the Quality of Service (QoS) level for said call when deciding said call is admitted via said backbone.\n",
      "- 3. The method according toclaim 1, wherein said indication is received in a Gateway Control Protocol (GCP) message.\n",
      "- 7. The method according toclaim 1, further comprising routing said call through a second backbone further connected to said media gateway.\n",
      "- 9. A Method for a Mobile Switching Centre Server in connection to a backbone, comprising the steps of: receiving a call set-up request associated with said backbone; detecting that the call set-up should be performed by a Media Gateway even when the measured packet loss is above a predefined packet loss threshold or when the measured jitter is above a predefined jitter threshold for said backbone; and providing an indication associated with the call to said Media Gateway, wherein the indication is based on a time period associated with the predefined packet loss threshold or the predefined jitter threshold, and wherein the indication indicates that the packet loss measurement above the predefined packet loss threshold or that the jitter measurement above the predefined jitter threshold is acceptable for said time period, and further indicating to admit the call via said backbone with a lower Quality of service accordingly, wherein said indication is received in a Gateway Control Protocol (GCP) message.\n",
      "- 10. The method according toclaim 9, wherein said step of detecting comprises: measuring a call gradient by analyzing call set-up events overtime, and detecting that the call set-up should be performed even when the measured packet loss is above a predefined packet loss threshold and/or when the measured jitter is above a predefined jitter threshold, when said gradient is above a predefined value.\n",
      "- 11. The method according toclaim 9, wherein said step of detecting further comprises: receiving an indication that a measured packet loss above the predefined packet loss threshold or a measured jitter above the predefined jitter threshold for an originator of said call is acceptable.\n",
      "- 12. The method according toclaim 9, wherein said step of detecting further comprises: receiving an indication that a measured packet loss above the predefined packet loss threshold or a measured jitter above the predefined jitter threshold for the destination of said call is acceptable.\n",
      "- 13. A Media Gateway comprising: means for connecting to a backbone; said means for connecting are configured to receive a call; processing means configured to measure a packet loss or a jitter for said backbone; said processing means are further configured to detect an indication associated with the call, wherein the indication is based on a time period associated with the predefined packet loss threshold or the predefined jitter threshold, and wherein the indication indicates that the measured packet loss above a predefined packet loss threshold or the measured jitter above a predefined jitter threshold is acceptable for said time period; said processing means are further configured to decide based at least partially on the measured packet loss or the measured jitter and said detected indication whether said call is admitted to be routed via said backbone even if the measured packet loss exceeds the predefined packet loss threshold or if the measured jitter exceeds the predefined jitter threshold; and said processing means are further configured to adjust the Quality of Service (QoS) level for said call when deciding said call is admitted to be routed via said backbone, wherein said indication is received in a Gateway Control Protocol (GCP) message.\n",
      "- 14. The Media Gateway according toclaim 13, wherein said means for connecting to said backbone are further configured to receive said indication from an external source such as a Mobile Switching Centre Server.\n",
      "- 15. The Media Gateway according toclaim 13, further comprising an internal source for providing said indication.\n",
      "- 16. The Media Gateway according toclaim 14, wherein said means for deciding are further configured to route said call through a second backbone further connected to said media gateway.\n",
      "- 17. A Mobile Switching Centre Server comprising: means for connecting to a backbone; said means for connecting are further configured to receive a call set-up request associated with said backbone; means for processing configured to detect that a call set-up should be performed by a Media Gateway even when a measured packet loss is above a predefined packet loss threshold or when a measured jitter is above a predefined jitter threshold for said backbone; and means for providing an indication associated with the call to the Media Gateway, wherein the indication is based on a time period associated with the predefined packet loss threshold or the predefined jitter threshold, and wherein the indication indicates that the measured packet loss above the predefined packet loss threshold or the measured jitter above the predefined jitter threshold is acceptable for said time period, and further indicating to admit the call via said backbone with a lower Quality of service accordingly.\n",
      "- 18. The Mobile Switching Centre Server according toclaim 17wherein: said means for processing are further configured to measure a call gradient by analyzing call set-up events over time; and said means for processing are further configured to detect that the call set-up should be performed even if the measured packet loss is above a predefined packet loss threshold or if the measured jitter is above a predefined jitter threshold if said gradient is above a predefined value.\n",
      "- 19. The Mobile Switching Centre Server according toclaim 17wherein said means for processing are further configured to receive an indication associated with the call indicating that a packet loss above the predefined packet loss threshold or a jitter above the predefined jitter threshold for an originator of said call is acceptable.\n",
      "- 20. The Mobile Switching Centre Server according toclaim 17wherein said means for processing are further configured to receive an indication associated with the call indicating that a measured packet loss above the predefined packet loss threshold or a measured jitter above the predefined jitter threshold for a destination of said call is acceptable.\n",
      "- 2. The apparatus of claim 1, ftirther comprising a body having a cradle for the handset, wherein the onloff hook switch operates in response to placing the handset in the cradle.\n",
      "\n",
      "\n",
      "Topic 2: \"wherein\" \"diaphragm\" \"coupled\" \"side\" \"backplate\" \"capacitively\"\n",
      "Claims:\n",
      "- 4. The method according toclaim 3, wherein said indication is a priority value within the GCP message.\n",
      "- 5. The method according toclaim 3, wherein said GCP message is a context request.\n",
      "- a single backplate capacitively coupled to a side of the diaphragm; and\n",
      "- dual backplates capacitively coupled to respective sides of the diaphragm; and\n",
      "- 10. The system ofclaim 9, wherein the distortion is not frequency dependent, and wherein the distortion is not time dependent.\n",
      "- a single backplate capacitively coupled to a side of the diaphragm; and\n",
      "- dual backplates capacitively coupled to respective sides of the diaphragm; and\n",
      "\n",
      "\n",
      "Topic 3: \"signal\" \"electrical\" \"diaphragm\" \"output\" \"buffer\" \"generate\"\n",
      "Claims:\n",
      "- 7. The system ofclaim 6, wherein the MEMS microphone comprises:a diaphragm that converts the SPL into an electrical signal;a single backplate capacitively coupled to a side of the diaphragm; andan electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- a diaphragm that converts the SPL into an electrical signal;\n",
      "- an electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- 8. The system ofclaim 6, wherein the MEMS microphone comprises:a diaphragm that converts the SPL into an electrical signal;dual backplates capacitively coupled to respective sides of the diaphragm; andan electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- a diaphragm that converts the SPL into an electrical signal;\n",
      "- an electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- 13. The MEMS microphone ofclaim 11, further comprising:a diaphragm that converts the SPL into an electrical signal;a single backplate capacitively coupled to a side of the diaphragm; andan electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- a diaphragm that converts the SPL into an electrical signal;\n",
      "- an electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- 14. The MEMS microphone ofclaim 11, further comprising:a diaphragm that converts the SPL into an electrical signal;dual backplates capacitively coupled to respective sides of the diaphragm; andan electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "- a diaphragm that converts the SPL into an electrical signal;\n",
      "- an electronic amplifier that buffers the electrical signal to generate the output signal.\n",
      "\n",
      "\n",
      "Topic 4: \"distortion\" \"system\" \"processor\" \"microphone\" \"wherein\" \"ofclaim\"\n",
      "Claims:\n",
      "- a processor; and\n",
      "- 6. The system ofclaim 1, wherein the microphone comprises a micro-electro-mechanical system (MEMS) microphone.\n",
      "- 9. The system ofclaim 1, wherein the distortion comprises odd-order harmonic distortion and even-order harmonic distortion.\n",
      "- a processor; and\n",
      "\n",
      "\n",
      "Topic 5: \"output\" \"time\" \"waveform\" \"domain\" \"voltage\" \"wherein\"\n",
      "Claims:\n",
      "- 2. The system ofclaim 1, wherein the output signal is an output voltage, and wherein the obtaining comprises:measuring the output voltage.\n",
      "- measuring the output voltage.\n",
      "- 3. The system ofclaim 1, wherein the obtaining comprises:deriving, during a simulation of a defined model of the microphone comprising production based parameters of the microphone, the output signal.\n",
      "- deriving, during a simulation of a defined model of the microphone comprising production based parameters of the microphone, the output signal.\n",
      "- 4. The system ofclaim 1, wherein the obtaining comprises:importing output data of the time domain waveform representing the output signal; andbased on the output data, obtaining properties of the time domain waveform comprising the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- importing output data of the time domain waveform representing the output signal; and\n",
      "- based on the output data, obtaining properties of the time domain waveform comprising the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- 12. The MEMS microphone ofclaim 11, wherein the output signal is an output voltage, and wherein the deriving the equation comprises:obtaining output data of the time domain waveform representing the output voltage; andbased on the output data, deriving properties of the time domain waveform comprising the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- obtaining output data of the time domain waveform representing the output voltage; and\n",
      "- based on the output data, deriving properties of the time domain waveform comprising the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- obtaining data representing the output signal of the microphone; and\n",
      "- 18. The method ofclaim 16, wherein the output signal is a voltage output, and wherein the selecting comprises:measuring, by the system, the voltage output.\n",
      "- measuring, by the system, the voltage output.\n",
      "- 19. The method ofclaim 16, wherein the output signal is a voltage output, and wherein the selecting comprises:deriving, during a simulation of a defined model of the microphone based on defined production parameters corresponding to the microphone, the voltage output.\n",
      "- deriving, during a simulation of a defined model of the microphone based on defined production parameters corresponding to the microphone, the voltage output.\n",
      "- 14. A communication apparatus as substantially herein before described with reference to the accompanying drawings in Figures 1 to 7.\n",
      "\n",
      "\n",
      "Topic 6: \"toclaim\" \"according\" \"call\" \"method\" \"said\" \"source\"\n",
      "Claims:\n",
      "- 2. The method according toclaim 1, wherein said indication is received from an external source such as a Mobile Switching Centre Server.\n",
      "- 6. The method according toclaim 1, wherein said indication is received from an internal source.\n",
      "- 8. The method according toclaim 6, wherein said internal source is a calendar.\n",
      "- CLAIMS1. A wireless telephone apparatus comprising: a handset; an onioff-hook switch; a wireless communications module for establishing first and second cellular telephone calls via a base station; and means for generating an explicit call transfer command for sending to the base station in response to activation of the on-hook switch when the first and second wireless calls are established through the apparatus.\n",
      "- 13. A method of effecting a call transfer comprising: establishing first and second cellular telephone calls at a wireless telephone apparatus, and generating an explicit call transfer command for sending to a base station in response to activation of an on-hook switch.\n",
      "\n",
      "\n",
      "Topic 7: \"stimulus\" \"output\" \"representing\" \"domain\" \"time\" \"signal\"\n",
      "Claims:\n",
      "- 1. A system, comprising:a processor; anda memory that stores executable instructions that, when executed by the processor, facilitate performance of operations, comprising:obtaining a pressure-in to signal-out transfer function representing a distortion of an output signal of a microphone corresponding to an input stimulus of a defined sound pressure level (SPL) that has been applied to the microphone;creating an ideal sine wave stimulus based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;generating, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation representing the pressure-in to signal-out transfer function representing the distortion of the output signal; andinverting the equation to obtain an inverse transfer function for facilitating an application, by the microphone, of the inverse transfer function to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- a memory that stores executable instructions that, when executed by the processor, facilitate performance of operations, comprising:obtaining a pressure-in to signal-out transfer function representing a distortion of an output signal of a microphone corresponding to an input stimulus of a defined sound pressure level (SPL) that has been applied to the microphone;creating an ideal sine wave stimulus based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;generating, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation representing the pressure-in to signal-out transfer function representing the distortion of the output signal; andinverting the equation to obtain an inverse transfer function for facilitating an application, by the microphone, of the inverse transfer function to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- obtaining a pressure-in to signal-out transfer function representing a distortion of an output signal of a microphone corresponding to an input stimulus of a defined sound pressure level (SPL) that has been applied to the microphone;\n",
      "- creating an ideal sine wave stimulus based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;\n",
      "- generating, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation representing the pressure-in to signal-out transfer function representing the distortion of the output signal; and\n",
      "- inverting the equation to obtain an inverse transfer function for facilitating an application, by the microphone, of the inverse transfer function to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- 5. The system ofclaim 1, wherein the defined relationship represents a voltage difference between the ideal sine wave stimulus and the time domain waveform with respect to a defined alignment of respective phases of the ideal sine wave stimulus and the time domain waveform.\n",
      "- 11. A micro-electro-mechanical system (MEMS) microphone, comprising:a processor; anda memory that stores executable instructions that, when executed by the processor, facilitate performance of operations, comprising:creating an ideal sine wave stimulus representing an output signal of the MEMS microphone with respect to an input stimulus of a defined sound pressure level (SPL) that has been applied to the MEMS microphone, wherein the ideal sine wave stimulus is based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;deriving, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation of a transfer function representing a distortion of the output signal; andapplying, based on the equation, a linearization filter to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- a memory that stores executable instructions that, when executed by the processor, facilitate performance of operations, comprising:creating an ideal sine wave stimulus representing an output signal of the MEMS microphone with respect to an input stimulus of a defined sound pressure level (SPL) that has been applied to the MEMS microphone, wherein the ideal sine wave stimulus is based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;deriving, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation of a transfer function representing a distortion of the output signal; andapplying, based on the equation, a linearization filter to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- creating an ideal sine wave stimulus representing an output signal of the MEMS microphone with respect to an input stimulus of a defined sound pressure level (SPL) that has been applied to the MEMS microphone, wherein the ideal sine wave stimulus is based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;\n",
      "- deriving, based on a defined relationship between the ideal sine wave stimulus and the time domain waveform, an equation of a transfer function representing a distortion of the output signal; and\n",
      "- applying, based on the equation, a linearization filter to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- 15. The MEMS microphone ofclaim 11, wherein the defined relationship represents a voltage difference between the ideal sine wave stimulus and the time domain waveform with respect to a defined alignment of respective phases of the ideal sine wave stimulus and the time domain waveform.\n",
      "- 16. A method, comprising:generating, by a system comprising a processor, a sine wave stimulus representing an output signal of a microphone with respect to an input stimulus that has been applied to the microphone, wherein the sine wave stimulus is based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;selecting, by the system based on a defined relationship between the sine wave stimulus and the time domain waveform, an equation of a transfer function representing a distortion of the output signal; andfacilitating, by the system, an application, by the microphone, of an inversion of the equation to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- generating, by a system comprising a processor, a sine wave stimulus representing an output signal of a microphone with respect to an input stimulus that has been applied to the microphone, wherein the sine wave stimulus is based on an amplitude of a time domain waveform representing the output signal and a fundamental frequency of the time domain waveform;\n",
      "- selecting, by the system based on a defined relationship between the sine wave stimulus and the time domain waveform, an equation of a transfer function representing a distortion of the output signal; and\n",
      "- facilitating, by the system, an application, by the microphone, of an inversion of the equation to the output signal to obtain a linearized output representing the input stimulus.\n",
      "- 17. The method ofclaim 16, wherein the generating the sine wave stimulus comprises:obtaining data representing the output signal of the microphone; andgenerating the sine wave stimulus having the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- generating the sine wave stimulus having the amplitude of the time domain waveform and the fundamental frequency of the time domain waveform.\n",
      "- 20. The method ofclaim 16, wherein the selecting comprises:selecting the equation based on a voltage difference between the sine wave stimulus and the time domain waveform with respect to a defined alignment of respective phases of the sine wave stimulus and the time domain waveform.\n",
      "- selecting the equation based on a voltage difference between the sine wave stimulus and the time domain waveform with respect to a defined alignment of respective phases of the sine wave stimulus and the time domain waveform.\n",
      "\n",
      "\n",
      "Topic 8: \"gradient\" \"comprises\" \"setup\" \"toclaim\" \"according\" \"detecting\"\n",
      "Claims:\n",
      "\n",
      "\n",
      "Topic 9: \"call\" \"first\" \"apparatus\" \"claim\" \"second\" \"mean\"\n",
      "Claims:\n",
      "- 3. The apparatus of claim 1, 2 or 3, ftirther comprising: call receiving means for receiving a first call from a calling party; call initiating means for entering a call initiation mode, in response to activation of a first predetermined button, for initiating a second call; and transfer means for putting the first call on hold, initiating the second call, and toggling, in response to activation of the first predetermined button, between the first and second calls.\n",
      "- 4. The apparatus of claim 3, wherein the first predetermined button is a redial button.\n",
      "- 5. The apparatus of claim 3 or 4, wherein the transfer means toggles between the first and second calls by putting either the first or the second call on hold.\n",
      "- 6. The apparatus of any one of claims 3 to 5, further comprising means for enabling a phonebook lookup operation when in the call initiation mode.\n",
      "- 7. The apparatus of any one of claims 3 to 6, wherein the call initiation mode and a dialling mode are entered using the first predetermined button.\n",
      "- 8. The apparatus of any one of the preceding claims, further comprising display means for displaying first and second icons adjacent information relating to the first and second calls respectively, the first and second icons being adapted to switch when toggling between calls.\n",
      "- 9. The apparatus of claim 8, further comprising selection means for selecting information displayed on the display means.\n",
      "- 10. The apparatus of claim 8 or 9, wherein the transfer means is adapted to initiate a call to a second party whose information is displayed on the display means.\n",
      "- 11. The apparatus of any one of claims 3 to 10, further comprising a second predetermined button which ends an active call and reverts to a call on hold.\n",
      "- 12. The apparatus of claim 11, wherein the second predetermined button is a clear button.\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import re\n",
    "from gensim import corpora\n",
    "from gensim.models import LdaModel\n",
    "from gensim.models.coherencemodel import CoherenceModel\n",
    "from gensim.corpora import Dictionary\n",
    "from gensim.models import LdaModel\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n",
    "from sklearn.decomposition import LatentDirichletAllocation\n",
    "import scipy.cluster.hierarchy as sch\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "from nltk import download\n",
    "from scipy.spatial.distance import pdist, squareform\n",
    "from nltk.corpus import stopwords\n",
    "from gensim.models import CoherenceModel\n",
    "\n",
    "# Function to extract patent claims from URL\n",
    "#Same function as in other methods\n",
    "def extract_patent_claims(url):\n",
    "    pages = requests.get(url)\n",
    "    soup = BeautifulSoup(pages.text, 'html.parser')\n",
    "    claims = soup.find_all('div', class_='claim-text')\n",
    "\n",
    "    # Claim text extraction\n",
    "    extracted_claims = []\n",
    "    for claim in claims:\n",
    "        text = claim.get_text(strip=True)\n",
    "        extracted_claims.append(text)\n",
    "    return extracted_claims\n",
    "\n",
    "list_url = [\n",
    "    'https://patents.google.com/patent/US9634864B2/en?oq=US9634864B2',\n",
    "    'https://patents.google.com/patent/US9980046B2/en?oq=US9980046B2',\n",
    "    'https://patents.google.com/patent/GB2478972A/en?q=(phone)&oq=phone']\n",
    "\n",
    "claims = []\n",
    "for url in list_url:\n",
    "    claims.extend(extract_patent_claims(url))\n",
    "\n",
    "\n",
    "# Function to preprocess claims\n",
    "lemmatizer = WordNetLemmatizer()\n",
    "def preprocess_claims(claims):\n",
    "    stop_words = set(stopwords.words('english'))\n",
    "    processed_claims = []\n",
    "    \n",
    "    for claim in claims:\n",
    "        # Convert to lower case\n",
    "        claim = claim.lower()\n",
    "        # Remove non-alphabetic characters\n",
    "        claim = re.sub(r'[^a-z\\s]', '', claim)\n",
    "        # Tokenization\n",
    "        tokens = word_tokenize(claim)\n",
    "        # Remove stopwords\n",
    "        tokens = [lemmatizer.lemmatize(word) for word in tokens if word not in stop_words]\n",
    "        processed_claims.append(' '.join(tokens))\n",
    "    \n",
    "    return processed_claims\n",
    "\n",
    "preprocessed_claims = preprocess_claims(claims)\n",
    "# Convert the preprocessed claims into tokens\n",
    "texts = [claim.split() for claim in preprocessed_claims]\n",
    "\n",
    "\n",
    "# Create a dictionary and a corpus\n",
    "dictionary = corpora.Dictionary(texts)\n",
    "corpus = [dictionary.doc2bow(text) for text in texts]\n",
    "\n",
    "# Check if corpus and claims have same lengths\n",
    "if len(corpus) != len(preprocessed_claims):\n",
    "    raise ValueError(f\"Length mismatch: corpus length ({len(corpus)}) != preprocessed claims length ({len(preprocessed_claims)})\")\n",
    "\n",
    "# LDA model\n",
    "lda_model = LdaModel(corpus, num_topics=10, id2word=dictionary, passes=15)\n",
    "\n",
    "# Get topic \n",
    "def get_topic_descriptions(lda_model):\n",
    "    topic_descriptions = {}\n",
    "    for topic_id, topic_words in lda_model.print_topics(num_words=6):\n",
    "        description = ' '.join([word.split('*')[1].strip() for word in topic_words.split(' + ')])\n",
    "        topic_descriptions[topic_id] = description\n",
    "    return topic_descriptions\n",
    "topic_descriptions = get_topic_descriptions(lda_model)\n",
    "\n",
    "# Get claims by topic\n",
    "def get_claims_by_topic(lda_model, corpus, claims):\n",
    "    claims_by_topic = {i: [] for i in range(lda_model.num_topics)}\n",
    "    \n",
    "    # Ensure lengths match\n",
    "    if len(corpus) != len(claims):\n",
    "        raise ValueError(f\"Length mismatch: corpus length ({len(corpus)}) != claims length ({len(claims)})\")\n",
    "    \n",
    "    for i, doc_bow in enumerate(corpus):\n",
    "        topic_distribution = lda_model.get_document_topics(doc_bow)\n",
    "        \n",
    "        # Check if topic_distribution is empty\n",
    "        if not topic_distribution:\n",
    "            print(f\"Document {i} has no topic distribution.\")\n",
    "            continue\n",
    "        \n",
    "        # Use only the highest probability topic for simplicity\n",
    "        topic_id = max(topic_distribution, key=lambda x: x[1])[0]\n",
    "        \n",
    "        if topic_id in claims_by_topic:\n",
    "            claims_by_topic[topic_id].append(claims[i])\n",
    "        else:\n",
    "            print(f\"Topic ID {topic_id} is out of range.\")\n",
    "    \n",
    "    return claims_by_topic\n",
    "\n",
    "\n",
    "claims_by_topic = get_claims_by_topic(lda_model, corpus, claims)\n",
    "\n",
    "for topic_id, claims in claims_by_topic.items():\n",
    "    print(f\"Topic {topic_id}: {topic_descriptions[topic_id]}\")\n",
    "    print(\"Claims:\")\n",
    "    for claim in claims:\n",
    "        print(f\"- {claim}\")\n",
    "    print(\"\\n\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fa985655-60c5-43b8-b018-dee30c963d5b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coherence Score: 0.639\n"
     ]
    }
   ],
   "source": [
    "# Coherence Score \n",
    "coherence_model_lda = CoherenceModel(model=lda_model, texts=texts, dictionary=dictionary, coherence='c_v')\n",
    "coherence_lda = coherence_model_lda.get_coherence()\n",
    "print(f\"Coherence Score: {coherence_lda:.3f}\") \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd25f8d3-b3e6-4ae3-a048-a63ca8b68a77",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
